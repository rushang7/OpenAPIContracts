openapi: 3.0.0
info:
  title: Master-Data-Service
  description: ""
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/rushang.dhanesha/Master-Data-Service/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /department/v1/_create:
    post:
      tags:
      - Department
      summary: Create/Add new department on iFix for a tenant
      description: Create/Add new department on iFix for a tenant
      requestBody:
        description: Details for the new department + RequestHeader (meta data of
          the API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentRequest'
        required: true
      responses:
        "202":
          description: Request has been accepted for processing
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DepartmentResponse'
        "400":
          description: Failed to process the request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /department/v1/_search:
    post:
      tags:
      - Department
      summary: Get the list departments.
      description: |
        Based on the criteria get the list of departments.
      requestBody:
        description: Details for the department search criteria + RequestHeader (meta
          data of the API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentSearchRequest'
        required: true
      responses:
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DepartmentResponse'
        "400":
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /expenditure/v1/_create:
    post:
      tags:
      - Expenditure
      summary: Create/Add new Expenditure on iFix for a tenant
      description: Create/Add new Expenditure on iFix for a tenant
      requestBody:
        description: Details for the new Expenditure + RequestHeader (meta data of
          the API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenditureRequest'
        required: true
      responses:
        "202":
          description: Request has been accepted for processing
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenditureResponse'
        "400":
          description: Failed to process the request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /expenditure/v1/_search:
    post:
      tags:
      - Expenditure
      summary: Get the list Expenditure.
      description: |
        Based on the criteria get the list of Expenditure.
      requestBody:
        description: Details for the Expenditure search criteria + RequestHeader (meta
          data of the API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenditureSearchRequest'
        required: true
      responses:
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExpenditureResponse'
        "400":
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /project/v1/_create:
    post:
      tags:
      - Project
      summary: Create/Add new project on iFix for a tenant
      description: Create/Add new project on iFix for a tenant
      requestBody:
        description: Details for the new Project + RequestHeader (meta data of the
          API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        "202":
          description: Request has been accepted for processing
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: Failed to process the request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /project/v1/_search:
    post:
      tags:
      - Project
      summary: Get the list Project.
      description: |
        Based on the criteria get the list of Project.
      requestBody:
        description: Details for the Project search criteria + RequestHeader (meta
          data of the API).
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSearchRequest'
        required: true
      responses:
        "200":
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
        "400":
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Department:
      required:
      - code
      - name
      - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique system generated UUID
          readOnly: true
        tenantId:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique tenant identifier
        code:
          maxLength: 64
          minLength: 1
          type: string
          description: Capture unique department code
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Capture the name of the department
        isNodal:
          type: boolean
          description: If it is nodal department then the value will be true
          default: false
        parent:
          maxLength: 64
          minLength: 1
          type: string
          description: parent department id
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
      description: Captures the department attributes
    Expenditure:
      required:
      - code
      - name
      - tenantId
      - type
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique system generated UUID
          readOnly: true
        tenantId:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique tenant identifier
        code:
          maxLength: 64
          minLength: 1
          type: string
          description: Capture unique expenditure code
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Capture the name of the expenditure
        type:
          type: string
          description: Capture the type of the expenditure
          enum:
          - Scheme
          - Non-Scheme
        departmentId:
          maxLength: 64
          minLength: 1
          type: string
          description: Department id from department master
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
      description: Captures the Expenditure attributes
    DepartmentEntityAttributes:
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique system generated UUID
          readOnly: true
        code:
          maxLength: 256
          minLength: 1
          type: string
          description: Unique the department entity code
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Captures the department entity name
        hierarchyLevel:
          maxLength: 256
          minLength: 1
          type: number
          description: Capture the level of the given department entity
      description: The list basic attributes of a department entity that are stored
        as part of the ancestry list
    DepartmentEntity:
      required:
      - code
      - hierarchyLevelId
      - id
      - name
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique system generated UUID
          readOnly: true
        code:
          maxLength: 256
          minLength: 1
          type: string
          description: Unique the department entity code
        name:
          maxLength: 256
          minLength: 1
          type: string
          description: Captures the department entity name
        hierarchyLevel:
          maxLength: 256
          minLength: 1
          type: number
          description: Capture the level of the given department entity
        ancestry:
          type: array
          items:
            $ref: '#/components/schemas/DepartmentEntityAttributes'
      description: This object captures the information for department entity
      readOnly: true
    Project:
      required:
      - code
      - name
      - tenantId
      type: object
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique system generated UUID
          readOnly: true
        tenantId:
          maxLength: 64
          minLength: 1
          type: string
          description: Unique tenant identifier
        code:
          maxLength: 64
          minLength: 1
          type: string
          description: Capture unique Project code
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Capture the name of the project
        expenditureId:
          maxLength: 64
          minLength: 2
          type: string
          description: Capture the expenditure id from expenditure master
        departmentEntitytId:
          maxLength: 64
          minLength: 2
          type: string
          description: Capture the department entity id from department entity master
        departmentEntity:
          $ref: '#/components/schemas/DepartmentEntity'
        locationIds:
          type: array
          description: Capture the location id from location master
          items:
            type: string
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
      description: Captures the Project attributes
    DepartmentRequest:
      required:
      - department
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        department:
          $ref: '#/components/schemas/Department'
      description: Department request along with request metadata
    DepartmentResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        department:
          type: array
          items:
            $ref: '#/components/schemas/Department'
      description: Contains the ResponseHeader and the enriched Department information
    DepartmentSearchRequest:
      required:
      - criteria
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        criteria:
          $ref: '#/components/schemas/DepartmentSearchCriteria'
      description: Department search request along with request metadata. Defoult
        operator b/w multiple criteria is AND.
    DepartmentSearchCriteria:
      required:
      - tenantId
      type: object
      properties:
        Ids:
          type: array
          description: List of Department ids
          items:
            maxItems: 50
            type: string
        tenantId:
          maxLength: 64
          minLength: 2
          type: string
          description: Tenant Id
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Search by department name
        code:
          maxLength: 64
          minLength: 2
          type: string
          description: Search by department code
      description: The object contains all the search criteria of the Department
    ExpenditureRequest:
      required:
      - expenditure
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        expenditure:
          $ref: '#/components/schemas/Expenditure'
      description: Expenditure request along with request metadata
    ExpenditureResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Expenditure:
          type: array
          items:
            $ref: '#/components/schemas/Expenditure'
      description: Contains the ResponseHeader and the enriched Expenditure information
    ExpenditureSearchRequest:
      required:
      - criteria
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        criteria:
          $ref: '#/components/schemas/ExpenditureSearchCriteria'
      description: Expenditure search request along with request metadata. Defoult
        operator b/w multiple criteria is AND.
    ExpenditureSearchCriteria:
      required:
      - tenantId
      type: object
      properties:
        Ids:
          type: array
          description: List of Expenditure ids
          items:
            maxItems: 50
            type: string
        tenantId:
          maxLength: 64
          minLength: 2
          type: string
          description: Tenant Id
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Search by Expenditure name
        code:
          maxLength: 64
          minLength: 2
          type: string
          description: Search by Expenditure code
      description: The object contains all the search criteria of the Expenditure
    ProjectRequest:
      required:
      - project
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        project:
          $ref: '#/components/schemas/Project'
      description: Project request along with request metadata
    ProjectResponse:
      properties:
        responseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        project:
          type: array
          items:
            $ref: '#/components/schemas/Project'
      description: Contains the ResponseHeader and the enriched Project information
    ProjectSearchRequest:
      required:
      - criteria
      - requestHeader
      properties:
        requestHeader:
          $ref: '#/components/schemas/RequestHeader'
        criteria:
          $ref: '#/components/schemas/ProjectSearchCriteria'
      description: Project search request along with request metadata. Default operator
        b/w multiple criteria is AND
    ProjectSearchCriteria:
      required:
      - tenantId
      type: object
      properties:
        Ids:
          type: array
          description: List of Project ids
          items:
            maxItems: 50
            type: string
        tenantId:
          maxLength: 64
          minLength: 2
          type: string
          description: Tenant Id
        name:
          maxLength: 256
          minLength: 2
          type: string
          description: Search by Project name
        code:
          maxLength: 64
          minLength: 2
          type: string
          description: Search by Project code
        expenditureId:
          maxLength: 64
          minLength: 2
          type: string
          description: Capture the expenditure id from expenditure master
        departmentId:
          maxLength: 64
          minLength: 2
          type: string
          description: Capture the department id from department master
        locationId:
          maxLength: 64
          minLength: 2
          type: string
          description: Capture the location id from location master
      description: The object contains all the search criteria of the Project
    ErrorResponse:
      required:
      - ResponseHeader
      type: object
      properties:
        ResponseHeader:
          $ref: '#/components/schemas/ResponseHeader'
        Errors:
          minLength: 1
          type: array
          description: Error response array to return multiple error for single request
          items:
            $ref: '#/components/schemas/Error'
      description: All APIs will return ErrorRes in case of failure which will carry
        ResponseHeader as metadata and Error object as actual representation of error.
    ResponseHeader:
      type: object
      properties:
        ts:
          type: integer
          description: response time in epoch
          format: int64
        correlationId:
          maxLength: 256
          type: string
          description: unique response message id (UUID) - will usually be the correlation
            id from the server
        msgId:
          maxLength: 256
          type: string
          description: message id of the request
        status:
          type: string
          description: status of request processing
          enum:
          - SUCCESS
          - FAILED
        signature:
          type: string
          description: Hash describing the current Request
        version:
          maxLength: 64
          minLength: 2
          type: string
          description: The version of the API
          nullable: false
      description: "ResponseHeader should be used to carry metadata information about\
        \ the response from the server. apiId, ver and msgId in ResponseHeader should\
        \ always correspond to the same values in respective request's RequestHeader."
      readOnly: true
    Error:
      required:
      - code
      - description
      - message
      type: object
      properties:
        code:
          type: string
          description: Error Code will be service specific error label/code to identiffy
            the error. Example for error code would be User.NotFound to indicate User
            Not Found by User/Authentication service. All services must declare their
            possible Error Codes with brief description in the error response section
            of their API path.
        message:
          type: string
          description: Human readable error message
        description:
          type: string
          description: technical description of the error which can help developer
            to debug the error if error is unexpected.
      description: Error object will be returned as a part of reponse body in conjunction
        with ResponseHeader as part of ErrorResponse whenever the request processing
        status in the ResponseHeader is FAILED. HTTP return in this scenario will
        usually be HTTP 400.
    AuditDetails:
      type: object
      properties:
        createdBy:
          type: string
          description: UUID (preferred) or userid of the user that created the object
          readOnly: true
        lastModifiedBy:
          type: string
          description: UUID (preferred) or userid of the user that last modified the
            object
          readOnly: true
        createdTime:
          type: integer
          description: epoch of the time object is created
          format: int64
          readOnly: true
        lastModifiedTime:
          type: integer
          description: epoch of the time object is last modified
          format: int64
          readOnly: true
      description: Collection of audit related fields used by most models
      readOnly: true
    RequestHeader:
      type: object
      properties:
        ts:
          type: integer
          description: time in epoch
          format: int64
          nullable: false
        version:
          maxLength: 64
          minLength: 2
          type: string
          description: The version of the API
          nullable: false
        msgId:
          maxLength: 256
          type: string
          description: Unique request message id from the caller
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        correlationId:
          type: string
          readOnly: true
        signature:
          type: string
          description: Hash describing the current RequestHeader
      description: RequestHeader should be used to carry meta information about the
        requests to the server as described in the fields below. All eGov APIs will
        use requestHeader as a part of the request body to carry this meta information.
        Some of this information will be returned back from the server as part of
        the ResponseHeader in the response body to ensure correlation.
    UserInfo:
      type: object
      properties:
        uuid:
          type: string
          description: System Generated User id of the authenticated user.
        roles:
          type: array
          description: List of roles assigned to a user
          items:
            type: string
        tenants:
          type: array
          description: List of tenants assigned to a user
          items:
            type: string
        attributes:
          type: object
      description: Capture the user information
      readOnly: true
